diff -r f9d7552c8188 java-sdk/ldapjdk/netscape/ldap/LDAPUrl.java
--- a/mozilla/directory/java-sdk/ldapjdk/netscape/ldap/LDAPUrl.java	Mon Aug 08 16:00:49 2016 -0600
+++ b/mozilla/directory/java-sdk/ldapjdk/netscape/ldap/LDAPUrl.java	Fri Oct 07 11:57:01 2016 -0400
@@ -136,10 +136,10 @@
      */
     private void parseUrl(String url) throws MalformedURLException {
         StringTokenizer urlParser = new StringTokenizer (url, ":/?[]", true);
-        StringTokenizer markParser = new StringTokenizer (url, ":/?[]", true);
         String currentToken;
         String str = null;
         boolean usingIPv6 = false;
+        boolean usingDefaultHostPort = false;
 
         try {
             currentToken = urlParser.nextToken();
@@ -175,6 +175,7 @@
         if (currentToken.equals ("/")) {
             m_hostName = null;
             m_portNumber = m_secure ? DEFAULT_SECURE_PORT : LDAPv2.DEFAULT_PORT;
+            usingDefaultHostPort = true;
         } else if (currentToken.equals (":")) {
                 // port number without host name is not allowed
                throw new MalformedURLException ("No hostname");
@@ -194,37 +195,38 @@
             m_hostName = currentToken;
         }
         
-        // Set the port
-        if (urlParser.countTokens() == 0) {
-            m_portNumber = m_secure ? DEFAULT_SECURE_PORT : LDAPv2.DEFAULT_PORT;
-            return;
-        }
-        currentToken = urlParser.nextToken (); // either ":" or "/"
-
-        if (currentToken.equals (":")) {
-            try {
-                m_portNumber = Integer.parseInt (urlParser.nextToken());
-            } catch (NumberFormatException nf) {
-                throw new MalformedURLException ("Port not a number");
-            } catch (NoSuchElementException ex) {
-                throw new MalformedURLException ("No port number");
-            }
-                
+        if (usingDefaultHostPort == false) {
+            // Set the port
             if (urlParser.countTokens() == 0) {
+                m_portNumber = m_secure ? DEFAULT_SECURE_PORT : LDAPv2.DEFAULT_PORT;
                 return;
             }
-            else if (! urlParser.nextToken().equals("/")) {
+
+            // either ":","/", or the base DN if using "ldap:///"
+            currentToken = urlParser.nextToken ();
+
+            if (currentToken.equals (":")) {
+                try {
+                    m_portNumber = Integer.parseInt (urlParser.nextToken());
+                } catch (NumberFormatException nf) {
+                    throw new MalformedURLException ("Port not a number");
+                } catch (NoSuchElementException ex) {
+                    throw new MalformedURLException ("No port number");
+                }
+                if (urlParser.countTokens() == 0) {
+                    return;
+                }
+                else if (! urlParser.nextToken().equals("/")) {
+                    throw new MalformedURLException ();
+                }
+            } else if (currentToken.equals ("/")) {
+                m_portNumber = m_secure ? DEFAULT_SECURE_PORT : LDAPv2.DEFAULT_PORT;
+            } else {
+                // expecting ":" or "/"
                 throw new MalformedURLException ();
             }
-
-        } else if (currentToken.equals ("/")) {
-            m_portNumber = m_secure ? DEFAULT_SECURE_PORT : LDAPv2.DEFAULT_PORT;
-        } else {
-            // expecting ":" or "/"
-            throw new MalformedURLException ();
         }
 
-
         // DN
         if (!urlParser.hasMoreTokens ()) {
             return;
